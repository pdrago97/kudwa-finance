{
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "id": "1a53772e-e22b-4b50-aaad-876aab3572d3",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1,
      "position": [
        352,
        -464
      ],
      "credentials": {
        "openAiApi": {
          "id": "TctyBnpNOos3qcr5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "## Agent Tools for RAG",
        "height": 497,
        "width": 584,
        "color": 4
      },
      "id": "bfdc41fe-1e62-4a19-8fc8-55af1c17f754",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        752,
        -784
      ]
    },
    {
      "parameters": {
        "model": "text-embedding-3-small",
        "options": {}
      },
      "id": "6a9ca14a-9c38-4c12-a9b5-b3949a58d8b3",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "typeVersion": 1,
      "position": [
        768,
        -416
      ],
      "credentials": {
        "openAiApi": {
          "id": "TctyBnpNOos3qcr5",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "acce3f63-88d3-4b34-b2b4-4e8597b4ed39",
      "name": "Postgres Chat Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1,
      "position": [
        496,
        -464
      ],
      "notesInFlow": false,
      "credentials": {
        "postgres": {
          "id": "cu7hvXCpn86dbGjE",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "content": "## RAG AI Agent with Chat Interface",
        "height": 464.8027193303974,
        "width": 1035.6381264595484
      },
      "id": "3f16fa6d-f18f-4ca5-86c6-47728f15e1df",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -288,
        -752
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9a9a245e-f1a1-4282-bb02-a81ffe629f0f",
              "name": "chatInput",
              "value": "={{ $json.body.message }}",
              "type": "string"
            },
            {
              "id": "b80831d8-c653-4203-8706-adedfdb98f77",
              "name": "sessionId",
              "value": "={{ $json.chatId }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "802a6cd1-3ed2-41c8-a6f5-a40303491f8b",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        240,
        -688
      ]
    },
    {
      "parameters": {
        "public": true,
        "options": {}
      },
      "id": "cdf9d7f5-98a6-4d49-a27e-2be5415a7a78",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -256,
        -688
      ],
      "webhookId": "15e4d662-3f98-48d0-9f50-68838769ecac",
      "disabled": true
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "9ba11544-5c4e-4f91-818a-08a4ecb596c5",
        "authentication": "headerAuth",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "25cdfb81-dd75-4a1d-b6ae-a0864bc4ee1e",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -256,
        -480
      ],
      "webhookId": "9ba11544-5c4e-4f91-818a-08a4ecb596c5",
      "credentials": {
        "httpHeaderAuth": {
          "id": "XaiFAPPFIxLavZbg",
          "name": "Header Auth account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "You are a personal assistant who helps answer questions from a corpus of documents.The content of the answer MUST aim to present and \"sell\" Pedro's profile, skillset, experiences, achievements to recruiters and entrepreneurs eager to work together."
        }
      },
      "id": "520442f2-9a2e-4cd6-819e-f0be74291412",
      "name": "RAG AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.6,
      "position": [
        448,
        -688
      ]
    },
    {
      "parameters": {
        "mode": "retrieve-as-tool",
        "toolDescription": "Contains all the user's documents that you can check for context to answer user questions.",
        "tableName": {
          "__rl": true,
          "value": "documents",
          "mode": "list",
          "cachedResultName": "documents"
        },
        "useReranker": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.vectorStoreSupabase",
      "typeVersion": 1.3,
      "position": [
        784,
        -576
      ],
      "id": "6e8e799d-7d3b-4591-8d25-d7b796ca362d",
      "name": "Supabase Vector Store1",
      "credentials": {
        "supabaseApi": {
          "id": "zdmGTcP8j4YeczSW",
          "name": "Supabase account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Generate a proper UUID v4\nfunction generateUUID() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    const r = Math.random() * 16 | 0;\n    const v = c == 'x' ? r : (r & 0x3 | 0x8);\n    return v.toString(16);\n  });\n}\n\n// Add chatId to the existing data\nconst inputData = $input.all()[0].json;\nreturn [{\n  json: {\n    ...inputData,\n    chatId: generateUUID()\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -16,
        -688
      ],
      "id": "5a2ecc81-2ac6-4d51-a650-8d47406981e1",
      "name": "Code"
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output || $json.text || JSON.stringify($json) }}",
        "options": {}
      },
      "id": "a3dc9f11-5dc0-4f5c-afa9-043460260ddb",
      "name": "Respond to Webhook1",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        928,
        -736
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "output",
              "name": "output",
              "value": "={{ $json.output || $json.text || $json.response || JSON.stringify($json) }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "d643b5e8-453f-4b73-953f-775e6ad47aeb",
      "name": "Edit Fields1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        784,
        -736
      ]
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.rerankerCohere",
      "typeVersion": 1,
      "position": [
        880,
        -448
      ],
      "id": "a479e705-724e-49fb-9d78-c7df813ea000",
      "name": "Reranker Cohere",
      "credentials": {
        "cohereApi": {
          "id": "AfV4LAECYQlgK7Gy",
          "name": "CohereApi account"
        }
      }
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "RAG AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RAG AI Agent": {
      "main": [
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase Vector Store1": {
      "ai_tool": [
        [
          {
            "node": "RAG AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "Respond to Webhook1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Reranker Cohere": {
      "ai_reranker": [
        [
          {
            "node": "Supabase Vector Store1",
            "type": "ai_reranker",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "7b231313465b4b56abc040e1ee6699b89ffde13a1618d023c42b1ed91cd395de"
  }
}